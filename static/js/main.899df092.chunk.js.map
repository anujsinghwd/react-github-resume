{"version":3,"sources":["components/Profile.js","components/Searchbar.js","components/Header.js","components/Footer.js","components/LatestRepo.js","components/Skills.js","components/PopularRepos.js","components/Organization.js","components/Issues.js","App.js","serviceWorker.js","index.js"],"names":["Profile","react_default","a","createElement","id","className","this","props","joined","name","location","herf","concat","login","public_repo","href","followers","Component","Searchbar","event","preventDefault","value","refs","username","getProfile","onSubmit","submitForm","bind","type","placeholder","ref","HeaderNew","profileGet","components_Searchbar","getProfiles","Footer","LatestRepo","repoItems","Repos","map","repo","key","description","stargazers_count","watchers_count","forks_count","Skills","skills","Languages","skill","index","PopularRepos","popularRepos","Organization","orgs","Orgs","console","log","Orgss","comp","src","avatar_url","width","height","Issues","url","window","open","focus","issueItems","issue","title","body","state","apiToken","process","REACT_APP_GITHUB_ACCESS_TOKEN","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","user","language","totalContribution","contributionTitle","contributionUrl","repos","popular_repos","issues","_this2","Progress","show","finalURL","fetch","headers","Headers","Authorization","Content-Type","then","res","json","data","getLanguages","getContributions","getPopularRepos","setState","catch","error","_this3","err","_this4","getIssues","total","_this5","popular","_loop","i","forEach","e","push","eye","Math","ceil","sort","b","slice","getOrganizations","_this6","hide","_this7","languages","element","uniq","toConsumableArray","Set","git_profile","header","latestrepos","popular_repo","organization","length","userData","join","created_at","split","components_Profile","Website","blog","public_repos","Header","components_Skills","components_LatestRepo","components_PopularRepos","components_Organization","components_Issues","lib_main_default","style","background","thumbStyle","components_Footer","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.899df092.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Profile extends Component {\n  render() {\n    return (\n      <section id=\"content\">\n      <div className=\"container\">\n        <h3 className=\"mb-1 text-info\">Bio</h3>\n        <div className=\"card-body mb-0\">\n          <div className=\"item\">\n            <h4>On GitHub since {this.props.joined}, {this.props.name} is a developer\n                based in {this.props.location}, with <a herf={`https://github.com/${this.props.login}?tab=repositories`}>{this.props.public_repo} public repositories </a>\n                and <a href={`https://github.com/${this.props.login}?tab=followers`}>{this.props.followers} followers</a>.\n            </h4>\n          </div>\n        </div>\n      </div>\n      </section>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport './searchbar.css';\n\nclass Searchbar extends Component {\n\n  submitForm(event){\n    event.preventDefault();\n    let value = this.refs.username.value;\n    this.props.getProfile(value);\n    this.refs.username.value = '';\n  }\n\n  render() {\n    return (\n      <nav>\n        <form onSubmit={this.submitForm.bind(this)}>\n            <input type=\"text\" placeholder=\"Search..\" ref=\"username\" />\n            <button type=\"submit\">Submit</button>\n        </form>\n      </nav>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React, { Component } from 'react';\nimport Searchbar from './Searchbar';\n\nclass HeaderNew extends Component {\n\n  getProfiles(username){\n    this.props.profileGet(username);\n  }\n\n  render(){\n    return(\n      <header>\n          <div className=\"container clearfix\">\n              <h1 id=\"logo\">\n                  {this.props.name}\n              </h1>\n              <Searchbar getProfile={this.getProfiles.bind(this)}/>\n          </div>\n      </header>\n    )\n  }\n}\n\nexport default HeaderNew;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <div id=\"info-bar\">\n            <div className=\"container clearfix\">\n                <span className=\"all-tutorials\"><a href=\"https://github.com/anujsinghwd\">← GetInTouch</a></span>\n                <span className=\"back-to-tutorial\"><a href=\"https://www.facebook.com/anujsinghwd\">Anuj Singh</a></span>\n            </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass LatestRepo extends Component {\n  render(){\n    const repoItems = this.props.Repos.map(repo => (\n      <div key={repo.id} className=\"card card-body mb-0\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <h4>\n                {repo.name}\n            </h4>\n            <p>{repo.description}</p>\n          </div>\n          <div className=\"col-md-6\">\n            <span className=\"badge badge-info mr-1\">\n              <i className=\"fas fa-star\"></i> Stars: {repo.stargazers_count}\n            </span>\n            <span className=\"badge badge-secondary mr-1\">\n              <i className=\"far fa-eye\"></i> Watchers: {repo.watchers_count}\n            </span>\n            <span className=\"badge badge-success\">\n             <i className=\"fas fa-code-branch\"></i>  Forks: {repo.forks_count}\n            </span>\n          </div>\n        </div>\n      </div>\n    ));\n\n    return (\n      <div ref=\"myRef\">\n        <section>\n            <div className=\"container\">\n            <h3 className=\"mb-1 text-info\">Latest Github Repos</h3>\n            {repoItems}\n          </div>\n        </section>\n    </div>\n    )\n  }\n}\n\nexport default LatestRepo;\n","import React, { Component } from 'react';\n\n\nclass Skills extends Component {\n  render() {\n    const skillss = this.props.Languages;\n    const skills = skillss.map((skill, index) => (\n      <div key={index} className=\"p-3\">\n          <i className=\"fas fa-dot-circle\"></i> {skill}\n      </div>\n    ));\n\n    return (\n      <div ref=\"myRef\">\n          <section>\n            <div className=\"container\">\n              <h3 className=\"mb-1 text-info\">Skills</h3>\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"card card-body bg-light mb-3\">\n                        <div className=\"row\">\n                          <div className=\"d-flex flex-wrap justify-content-center align-items-center\">\n                            {skills}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n              </div>\n          </section>\n      </div>\n    );\n  }\n}\n\nexport default Skills;\n","import React, { Component } from 'react';\n\nclass PopularRepos extends Component {\n  render(){\n    const repoItems = this.props.popularRepos.map(repo => (\n      <div key={repo.id} className=\"card card-body mb-0\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <h4>\n                {repo.name}\n            </h4>\n            <p>{repo.description}</p>\n          </div>\n          <div className=\"col-md-6\">\n            <span className=\"badge badge-info mr-1\">\n              <i className=\"fas fa-star\"></i> Stars: {repo.stargazers_count}\n            </span>\n            <span className=\"badge badge-secondary mr-1\">\n              <i className=\"far fa-eye\"></i> Watchers: {repo.watchers_count}\n            </span>\n            <span className=\"badge badge-success\">\n             <i className=\"fas fa-code-branch\"></i>  Forks: {repo.forks_count}\n            </span>\n          </div>\n        </div>\n      </div>\n    ));\n\n    return (\n      <div ref=\"myRef\">\n        <section>\n            <div className=\"container\">\n            <h3 className=\"mb-1 text-info\">Popular Repositories</h3>\n            {repoItems}\n          </div>\n        </section>\n    </div>\n    )\n  }\n}\n\nexport default PopularRepos;\n","import React, { Component } from 'react';\n\n\nclass Organization extends Component {\n\n  render() {\n    const orgs = this.props.Orgs;\n    console.log(orgs);\n    const Orgss = orgs.map((comp, index) => (\n      <div key={index} className=\"p-3\">\n          <span><img src={comp.avatar_url} className=\"img-rounded\" width=\"40\" height=\"40\" /> {comp.login}</span>\n      </div>\n    ));\n\n    return (\n      <div ref=\"myRef\">\n          <section>\n            <div className=\"container\">\n              <h3 className=\"mb-1 text-info\">Organizations</h3>\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"card card-body bg-light mb-3\">\n                        <div className=\"row\">\n                          <div className=\"d-flex flex-wrap justify-content-center align-items-center\">\n                            {Orgss}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n              </div>\n          </section>\n      </div>\n    );\n  }\n}\n\nexport default Organization;\n","import React, { Component } from 'react';\n\nclass Issues extends Component {\n\n  openInNewTab(url) {\n    var win = window.open(url, '_blank');\n    win.focus();\n  }\n\n  render() {\n    const issueItems = this.props.Issues.map(issue => (\n      <div key={issue.id} className=\"card card-body mb-0\">\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n              <h4>\n                  {issue.title}\n              </h4>\n              <p>{issue.body}</p>\n          </div>\n          <div className=\"col-md-2\">\n            <span className=\"badge badge-info mr-1\">\n                <i className=\"fab fa-github\"></i> {issue.state}\n            </span>\n          </div>\n      </div>\n      </div>\n    ));\n    return(\n      <div ref=\"myRef\">\n        <section>\n            <div className=\"container\">\n              <h3 className=\"mb-1 text-info\">Issues</h3>\n              {issueItems}\n            </div>\n        </section>\n    </div>\n    );\n  }\n}\n\nexport default Issues;\n","import React, { Component } from 'react';\nimport Profile from './components/Profile';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport LatestRepo from './components/LatestRepo';\nimport Progress from \"react-progress-2\";\nimport Skills from './components/Skills';\nimport PopularRepos from './components/PopularRepos';\nimport Organization from './components/Organization';\nimport Issues from './components/Issues';\nconst API = `https://api.github.com/users`;\nconst apiToken = `${process.env.REACT_APP_GITHUB_ACCESS_TOKEN}`;\n\nclass App extends Component {\n\n    constructor(props){\n      super(props);\n      this.state = {\n        user: [],\n        language: [],\n        totalContribution: 0,\n        contributionTitle: [],\n        contributionUrl: [],\n        repos: [],\n        popular_repos: [],\n        orgs: [],\n        issues: []\n      }\n    }\n\n    componentDidMount(){\n      this.getProfile('anujsinghwd');\n    }\n\n    getProfile(username) {\n        Progress.show();\n        let finalURL = `${API}/${username}`;\n        fetch(finalURL,{\n           headers: new Headers({\n             'Authorization': `token ${apiToken}`,\n             'Content-Type': 'application/x-www-form-urlencoded'\n           })\n         })\n        .then((res) => res.json())\n        .then((data) => {\n            this.getLanguages(username);\n            this.getContributions(username);\n            this.getPopularRepos(data['public_repos'], username);\n            this.setState({user: data});\n          })\n         .catch((error) => console.log('There was a problem in fetching data'));\n    }\n\n    getContributions(username){\n          fetch(\n            `https://api.github.com/users/${username}/repos?per_page=5&sort=created: asc`,\n            {\n             headers: new Headers({\n               'Authorization': `token ${apiToken}`,\n               'Content-Type': 'application/x-www-form-urlencoded'\n             })\n           }\n         )\n          .then(res => res.json())\n          .then(data => {\n              this.setState({ repos: data });\n          })\n          .catch(err => console.log(err));\n    }\n\n    getOrganizations(username){\n      fetch(\n        `https://api.github.com/users/${username}/orgs`,\n        {\n         headers: new Headers({\n           'Authorization': `token ${apiToken}`,\n           'Content-Type': 'application/x-www-form-urlencoded'\n         })\n       }\n     )\n      .then(res => res.json())\n      .then(data => {\n          this.setState({orgs: data});\n          this.getIssues(username);\n      })\n      .catch(err => console.log(err));\n    }\n\n    getPopularRepos(total, username){\n      let popular = [];\n        for(let i=1;i<=Math.ceil(total/100); i++){\n            fetch(\n              `https://api.github.com/users/${username}/repos?per_page=100&page=${i}`,\n              {\n              headers: new Headers({\n                'Authorization': `token ${apiToken}`,\n                'Content-Type': 'application/x-www-form-urlencoded'\n              })\n            }\n          )\n            .then(res => res.json())\n            .then(data => {\n                data.forEach(function (e) {\n                    popular.push({id: e['id'],eye: (e['forks_count']+e['watchers_count']), watchers_count: e['watchers_count'],stargazers_count: e['stargazers_count'], forks_count: e['forks_count'],name: e['name'], url: e['html_url'], description: e['description']});\n                })\n\n                if(i === Math.ceil(total/100)){\n                    popular.sort(function (a, b) {\n                        return b['eye'] - a['eye']\n                    });\n                  this.setState({popular_repos: popular.slice(0, 5)});\n                  this.getOrganizations(username);\n                }\n            })\n            .catch(err => console.log(err));\n        }\n    }\n\n    getIssues(username){\n      let issue = [];\n      fetch(\n        `https://api.github.com/search/issues?q=type:pr+is:merged+author:${username}&per_page=10&page=1`,\n        {\n        headers: new Headers({\n          'Authorization': `token ${apiToken}`,\n          'Content-Type': 'application/x-www-form-urlencoded'\n        })\n      }\n    )\n      .then(res => res.json())\n      .then(data => {\n          data['items'].forEach(function (e) {\n              issue.push({id: e['id'], title: e['title'], body: e['body'], url: e['html_url'], state: e['state']});\n          })\n          this.setState({issues: issue});\n          Progress.hide();\n      })\n      .catch(err => {\n          console.log(err);\n          Progress.hide();\n      });\n    }\n\n\n    getLanguages(username){\n      let languages = [];\n      let finalURL = `https://api.github.com/users/${username}/repos?per_page=100`;\n      fetch(finalURL,{\n        headers: new Headers({\n            'Authorization': `token ${apiToken}`,\n            'Content-Type': 'application/x-www-form-urlencoded'\n          })\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            data.forEach(function(element) {\n                if(element['language']){\n                    languages.push(element['language']);\n                }\n            })\n            var uniq = [...new Set(languages)];\n            this.setState({language: uniq});\n        })\n       .catch((error) => console.log('There was a problem in fetching data'));\n    }\n\n  render() {\n    var git_profile;\n    var header;\n    var latestrepos;\n    var popular_repo;\n    var organization;\n    var issues;\n    var skills;\n    if(this.state.repos.length > 0 && this.state.user.name)\n    {\n        let userData = this.state.user;\n        let join = userData.created_at.split('-');\n        let name = (userData.name)  ? userData.name : userData.login;\n        git_profile = <Profile login={userData.login} name={name}  Website={userData.blog} location={userData.location} joined={join[0]} followers={userData.followers} public_repo={userData.public_repos}/>\n        header = <Header name={name} profileGet={this.getProfile.bind(this)} />\n\n    }\n\n    if(this.state.language.length > 0){\n        skills = <Skills Languages={this.state.language}/>\n    }\n\n    if(this.state.repos.length > 0){\n      latestrepos = <LatestRepo Repos={this.state.repos} />\n    }\n\n    if(this.state.popular_repos.length > 0){\n      popular_repo = <PopularRepos popularRepos={this.state.popular_repos}/>\n    }\n\n    if(this.state.orgs.length > 0){\n      organization = <Organization Orgs = {this.state.orgs} />\n    }\n\n    if(this.state.issues.length > 0){\n      issues = <Issues Issues={this.state.issues}/>\n    }\n\n    return (\n      <div className=\"layout\">\n          <Progress.Component style={{background: 'orange'}}\n                              thumbStyle={{background: 'green'}}\n          />\n          { header }\n          <div id=\"main\">\n              {git_profile}\n              {organization}\n              {skills}\n              {popular_repo}\n              {latestrepos}\n              {issues}\n          </div>\n          <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"react-progress-2/main.css\"\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}